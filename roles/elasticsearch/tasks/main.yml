# SPDX-License-Identifier: MIT
---
# yamllint disable rule:line-length
- name: Set platform/version specific variables
  include_vars: "{{ item }}"
  loop:
    - "{{ role_path }}/vars/default.yml"
    - "{{ role_path }}/vars/{{ ansible_facts['os_family'] }}.yml"
    - "{{ role_path }}/vars/{{ ansible_facts['distribution'] }}.yml"
    - "{{ role_path }}/vars/{{ ansible_facts['distribution'] }}_{{ ansible_facts['distribution_major_version'] }}.yml"
    - "{{ role_path }}/vars/{{ ansible_facts['distribution'] }}_{{ ansible_facts['distribution_version'] }}.yml"
  when: item is file
# yamllint enable rule:line-length

- name: Determine if system is ostree and set flag
  when: not __ansible_pcp_is_ostree is defined
  block:
    - name: Check if system is ostree
      stat:
        path: /run/ostree-booted
      register: __ostree_booted_stat

    - name: Set flag to indicate system is ostree
      set_fact:
        __ansible_pcp_is_ostree: "{{ __ostree_booted_stat.stat.exists }}"

- name: Establish Elasticsearch metrics package names
  set_fact:
    __elasticsearch_packages_extra: "{{ __elasticsearch_packages_extra +
                                     __elasticsearch_packages_pcp }}"
  when:
    - elasticsearch_metrics_provider == 'pcp'
    - elasticsearch_agent | d(false) | bool

- name: Establish Elasticsearch metrics export package names
  set_fact:
    __elasticsearch_packages_extra: "{{ __elasticsearch_packages_extra +
                                     __elasticsearch_packages_export_pcp }}"
  when:
    - elasticsearch_metrics_provider == 'pcp'
    - elasticsearch_export_metrics | d(false) | bool

- name: Install needed Elasticsearch metrics packages
  package:
    name: "{{ __elasticsearch_packages_extra }}"
    state: present
    use: "{{ (__ansible_pcp_is_ostree | d(false)) |
             ternary('ansible.posix.rhel_rpm_ostree', omit) }}"
  when: __elasticsearch_packages_extra | d([])

- name: Ensure PCP Elasticsearch agent configuration directory exists
  file:
    path: "{{ __elasticsearch_conf_dir }}"
    state: directory
    mode: 0755
  when: elasticsearch_metrics_provider == 'pcp'

- name: Ensure PCP Elasticsearch agent is configured
  template:
    src: elasticsearch.conf.j2
    dest: "{{ __elasticsearch_conf }}"
    follow: true
    mode: 0600
  when:
    - elasticsearch_metrics_provider == 'pcp'
    - elasticsearch_agent | d(false) | bool

- name: Ensure correct service path for ostree systems
  when:
    - __ansible_pcp_is_ostree | d(false)
    - __elasticsearch_service_path != "/etc/systemd/system"
  set_fact:
    __elasticsearch_service_path: /etc/systemd/system

- name: Ensure PCP Elasticsearch export service exists
  template:
    src: pcp2elasticsearch.service.j2
    dest: "{{ __elasticsearch_service_path }}/pcp2elasticsearch.service"
    mode: 0600
  when:
    - elasticsearch_metrics_provider == 'pcp'
    - elasticsearch_export_metrics | d(false) | bool

- name: Ensure PCP Elasticsearch export is running and enabled on boot
  service:
    name: pcp2elasticsearch
    state: started
    enabled: true
  ignore_errors: true  # noqa ignore-errors
  # Elasticsearch server may be running remotely or presently down
  # but since a playbook has explicitly asked us for it, we end up
  # having to install our service ignoring any errors.
  when:
    - elasticsearch_metrics_provider == 'pcp'
    - elasticsearch_export_metrics | d(false) | bool
